package ui;

//From this package
import core.*;
//File IO related
import java.awt.*;
import java.io.*;
import java.util.*;
//Display related
import java.text.*;
import javax.swing.*;
        
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 * View all the entries and attachments of a User
 * @author Amy Zhang
 */
public class View extends javax.swing.JFrame {

    private final User user;
    private Date date;
    
    /**
     * Creates new form View
     * @param user The user that has logged in, shows only their entries
     * @param date The date for the calendar to start on. Today - if from Login, Selected Date - if from Edit
     */
    public View(User user, Date date) {
        this.user = user;
        this.date = date;
                
        if (user == null) { //In case class is run as main class
            System.out.println("Run the Login class as the main class, no user is logged in");
            return;
        }
        
        initComponents();
        this.getRootPane().setDefaultButton(btnLogOut);
        
        //update components related to Entry
        updateBookmarkList();
        updateAttachmentsList(user.getEntry(date));
        calendar.setDate(date);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDate = new javax.swing.JLabel();
        separator = new javax.swing.JSeparator();
        btnEdit = new javax.swing.JButton();
        chkBookmark = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstBookmark = new javax.swing.JList<>();
        lblBookmark = new javax.swing.JLabel();
        lblEntry = new javax.swing.JLabel();
        btnLogOut = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        titleUnderline = new javax.swing.JSeparator();
        btnNew = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        edrEntry = new javax.swing.JEditorPane();
        calendar = new com.toedter.calendar.JCalendar();
        lblBookmark1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstAttachment = new javax.swing.JList<>();
        lblBookmark2 = new javax.swing.JLabel();
        lblBookmark3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDate.setText("Select the date");

        separator.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        chkBookmark.setText("Bookmarked");
        chkBookmark.setToolTipText("Not Editable: displays whether or not the entry selected is bookmarked.");
        chkBookmark.setFocusable(false);
        chkBookmark.setRequestFocusEnabled(false);
        chkBookmark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBookmarkActionPerformed(evt);
            }
        });

        lstBookmark.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstBookmark.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstBookmarkMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lstBookmark);

        lblBookmark.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblBookmark.setText("Make sure to log out");

        lblEntry.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        lblEntry.setText(" ");

        btnLogOut.setText("Log out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblTitle.setText("View Your Entries");

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        edrEntry.setEditable(false);
        edrEntry.setContentType("text/html"); // NOI18N
        edrEntry.setFocusable(false);
        edrEntry.setMinimumSize(new java.awt.Dimension(2, 27));
        jScrollPane3.setViewportView(edrEntry);

        calendar.setDate(date);
        calendar.setFont(new java.awt.Font("Niagara Solid", 0, 12)); // NOI18N
        calendar.setSundayForeground(new java.awt.Color(0, 153, 0));
        calendar.setTodayButtonVisible(true);
        calendar.setWeekOfYearVisible(false);
        calendar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                calendarPropertyChange(evt);
            }
        });

        lblBookmark1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblBookmark1.setText("Attachments");

        lstAttachment.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstAttachment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstAttachmentMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(lstAttachment);

        lblBookmark2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblBookmark2.setText("Bookmarks");

        lblBookmark3.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblBookmark3.setText("when you are finished");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTitle)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(titleUnderline, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblBookmark2))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblBookmark1)
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblBookmark)
                                            .addComponent(lblBookmark3)))))
                            .addComponent(lblDate)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(calendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEntry)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(chkBookmark)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(25, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(separator)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lblEntry)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEdit)
                            .addComponent(chkBookmark)
                            .addComponent(btnNew)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblBookmark)
                                .addGap(0, 0, 0)
                                .addComponent(lblBookmark3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTitle)
                                .addGap(4, 4, 4)
                                .addComponent(titleUnderline, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblDate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(calendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(37, 37, 37)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblBookmark1)
                                            .addComponent(lblBookmark2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(btnLogOut)))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Update the entries in lstBookmarked
     */
    private void updateBookmarkList() {
        DefaultListModel list = new DefaultListModel();
        //adds entry if bookmarked
        for (Entry entry : user.getEntries()) {
            if (entry.isBookmarked()) {
                list.addElement(DateFormat.getDateInstance().format(entry.getDate()));
            }
        }
        lstBookmark.setModel(list);
    }
    
    /**
     * Update the items in lstAttachments
     * Contains different content depending on the Entry
     */
    private void updateAttachmentsList(Entry entry) {
        DefaultListModel list = new DefaultListModel();
        list.removeAllElements();
        //Adds attachments to lstAttachment
        if (entry != null) { //if on a new file
            for (Attachment file : entry.getAttachments()) {
                list.addElement(file.getName());
            }
        }
        lstAttachment.setModel(list);
    }

    /**
     * Changes components properties depending on date selected in calendar
     * @param evt When the date on the calendar changes
     */
    private void calendarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_calendarPropertyChange
        //Gets new date
        date = calendar.getDate();
        lblEntry.setText("Entry - " + DateFormat.getDateInstance().format(date));
        
        //Finds entry with new date
        if (user.getEntry(date) == null) { //No entry is found
            edrEntry.setText("<h1>Let's write! Click 'New' to start a new entry</h1>");
            btnNew.setVisible(true);
            btnEdit.setVisible(false);
            chkBookmark.setSelected(false);
            updateAttachmentsList(null);
        } else { //Entry is found, displayed in txaEntry
            edrEntry.setText(user.getEntry(date).toHTML().replace("<\\p>", "\n<\\p>"));
            btnNew.setVisible(false);
            btnEdit.setVisible(true);
            chkBookmark.setSelected(user.getEntry(date).isBookmarked());
            updateAttachmentsList(user.getEntry(date));
        }
    }//GEN-LAST:event_calendarPropertyChange

    /**
     * Returns to the Login frame
     * @param evt When the "Log Out" button is pressed
     */
    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        new File(user.getDirectory() + "\\temp").delete(); //deletes temporary unencrypted attachment file

        this.dispose();
        new Login().setVisible(true);
    }//GEN-LAST:event_btnLogOutActionPerformed

    /**
     * Opens Edit with the entry that corresponds with selected date
     * @param evt When the "Edit" button is pressed
     */
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        this.dispose();
        new Edit(user, user.getEntry(date)).setVisible(true);
    }//GEN-LAST:event_btnEditActionPerformed

    /**
     * Creates a new entry with the selected date. Then, opens Edit with created entry
     * @param evt When the "New" button is pressed
     */
    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        user.addEntry(Entry.createEntry(date, user));
        btnEditActionPerformed(evt);
    }//GEN-LAST:event_btnNewActionPerformed

    /**
     * Bookmark does not change upon interaction
     * changing the isBookmarked property of an Entry is available in Edit
     * @param evt When the chkBookmark state is changed
     */
    private void chkBookmarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBookmarkActionPerformed
        chkBookmark.setSelected(user.getEntry(date).isBookmarked()); 
    }//GEN-LAST:event_chkBookmarkActionPerformed

    /**
     * Changes the displaying entry to the one specified on lstBookmark
     * @param evt When mouse clicks inside range of lstBookmark
     */
    private void lstBookmarkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstBookmarkMouseClicked
        if (lstBookmark.getSelectedIndex() == -1) return; //When no value is selected, but event still triggers
            
        //changes date of calendar
        try {
            calendar.setDate(DateFormat.getDateInstance().parse(lstBookmark.getSelectedValue()));
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_lstBookmarkMouseClicked

    /**
     * Opens selected attachment from lstAttachments
     * @param evt When the mouse clicks in Attachments
     */
    private void lstAttachmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstAttachmentMouseClicked
        if (lstAttachment.getSelectedIndex() == -1) return; //When no value is selected, but event still triggers
        
        //Decrypts file
        File file = user.getEntry(date).getAttachments().get(lstAttachment.getSelectedIndex()).getFile(); //the selected attachment file
        File newFile = new File(user.getDirectory() + "\\temp"); //creates a temporary file with decrypted attachment
        SecureUtil.decryptFile(file, newFile, user.getPasswordKey());

        //Opens decrypted attachment
        try {
            Desktop.getDesktop().open(newFile);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_lstAttachmentMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View(null, null).setVisible(true); //returns null when running as main class, no user logged in
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnNew;
    private com.toedter.calendar.JCalendar calendar;
    private javax.swing.JCheckBox chkBookmark;
    private javax.swing.JEditorPane edrEntry;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblBookmark;
    private javax.swing.JLabel lblBookmark1;
    private javax.swing.JLabel lblBookmark2;
    private javax.swing.JLabel lblBookmark3;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblEntry;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JList<String> lstAttachment;
    private javax.swing.JList<String> lstBookmark;
    private javax.swing.JSeparator separator;
    private javax.swing.JSeparator titleUnderline;
    // End of variables declaration//GEN-END:variables
}
